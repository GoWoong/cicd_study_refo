name: Ko_test-1

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
      
      - name: docker build setup
        uses: docker/setup-buildx-action@v1
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: AWS ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
     
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ setps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fastapi_file_repo
          IMAGE_NAME: my-python-app
          IMAGE_TAG: ${{ github.sha }}
        run:
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to EC2
        uses: aws-actions/aws-codedoploy-github-deployment@v1
        with:
          application-name: cicd_test_app_ko
          deployment-group: cicd_deploy_group
          region: ap-northeast-2
          wait-until-deployed: true
          revision-type: docker
          image-definitions: name=${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }},revision=${{ github.sha}}
        
          
      
